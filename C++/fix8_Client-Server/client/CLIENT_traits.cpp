//-------------------------------------------------------------------------------------------------
// *** f8c generated file: DO NOT EDIT! Created: 2017-07-21 10:33:35 ***
//-------------------------------------------------------------------------------------------------
/*

Fix8 is released under the GNU LESSER GENERAL PUBLIC LICENSE Version 3.

Fix8 Open Source FIX Engine.
Copyright (C) 2010-17 David L. Dight <fix@fix8.org>

Fix8 is free software: you can  redistribute it and / or modify  it under the  terms of the
GNU Lesser General  Public License as  published  by the Free  Software Foundation,  either
version 3 of the License, or (at your option) any later version.

Fix8 is distributed in the hope  that it will be useful, but WITHOUT ANY WARRANTY;  without
even the  implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

You should  have received a copy of the GNU Lesser General Public  License along with Fix8.
If not, see <http://www.gnu.org/licenses/>.

*******************************************************************************************
*                Special note for Fix8 compiler generated source code                     *
*                                                                                         *
* Binary works  that are the results of compilation of code that is generated by the Fix8 *
* compiler  can be released  without releasing your  source code as  long as your  binary *
* links dynamically  against an  unmodified version of the Fix8 library.  You are however *
* required to leave the copyright text in the generated code.                             *
*                                                                                         *
*******************************************************************************************

BECAUSE THE PROGRAM IS  LICENSED FREE OF  CHARGE, THERE IS NO  WARRANTY FOR THE PROGRAM, TO
THE EXTENT  PERMITTED  BY  APPLICABLE  LAW.  EXCEPT WHEN  OTHERWISE  STATED IN  WRITING THE
COPYRIGHT HOLDERS AND/OR OTHER PARTIES  PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY
KIND,  EITHER EXPRESSED   OR   IMPLIED,  INCLUDING,  BUT   NOT  LIMITED   TO,  THE  IMPLIED
WARRANTIES  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO
THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE,
YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.

IN NO EVENT UNLESS REQUIRED  BY APPLICABLE LAW  OR AGREED TO IN  WRITING WILL ANY COPYRIGHT
HOLDER, OR  ANY OTHER PARTY  WHO MAY MODIFY  AND/OR REDISTRIBUTE  THE PROGRAM AS  PERMITTED
ABOVE,  BE  LIABLE  TO  YOU  FOR  DAMAGES,  INCLUDING  ANY  GENERAL, SPECIAL, INCIDENTAL OR
CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT
NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR
THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH
HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.

*/

//-------------------------------------------------------------------------------------------------
#include <fix8/f8config.h>
#if defined FIX8_MAGIC_NUM && FIX8_MAGIC_NUM > 16789508L
#error CLIENT_traits.cpp version 1.3.4 is out of date. Please regenerate with f8c.
#endif
//-------------------------------------------------------------------------------------------------
// CLIENT_traits.cpp
//-------------------------------------------------------------------------------------------------
#include <iostream>
#include <fstream>
#include <iomanip>
#include <sstream>
#include <vector>
#include <map>
#include <list>
#include <set>
#include <iterator>
#include <algorithm>
#include <cerrno>
#include <string.h>
// f8 includes
#include <fix8/f8exception.hpp>
#include <fix8/hypersleep.hpp>
#include <fix8/mpmc.hpp>
#include <fix8/thread.hpp>
#include <fix8/f8types.hpp>
#include <fix8/f8utils.hpp>
#include <fix8/tickval.hpp>
#include <fix8/logger.hpp>
#include <fix8/traits.hpp>
#include <fix8/field.hpp>
#include <fix8/message.hpp>
#include "CLIENT_types.hpp"
#include "CLIENT_router.hpp"
#include "CLIENT_classes.hpp"
//-------------------------------------------------------------------------------------------------
namespace FIX8 {
namespace CLIENT {

//-------------------------------------------------------------------------------------------------
// Common group traits
namespace {
//-------------------------------------------------------------------------------------------------
const FieldTrait LinesOfTextV1_traits[] // refs:2
{
   {  58,15,  1,  0,0x05}, { 354, 2,  2,  0,0x04}, { 355,28,  3,  0,0x04}
};
const FieldTrait_Hash_Array LinesOfTextV1_ftha(LinesOfTextV1_traits, 3);
const MsgType LinesOfTextV1_msgtype("LinesOfTextV1");
//-------------------------------------------------------------------------------------------------
const FieldTrait NoAllocsV1_traits[] // refs:3
{
   {  79,15,  1,  0,0x04}, {  80,10,  2,  0,0x04}
};
const FieldTrait_Hash_Array NoAllocsV1_ftha(NoAllocsV1_traits, 2);
const MsgType NoAllocsV1_msgtype("NoAllocsV1");
//-------------------------------------------------------------------------------------------------
const FieldTrait NoRelatedSymV1_traits[] // refs:2
{
   {  54, 7, 21,  0,0x04}, { 305,15,  4,  0,0x04}, { 306,15, 14,  0,0x04}, { 307,15, 17,  0,0x04},
   { 308,20, 13,  0,0x04}, { 309,15,  3,  0,0x04}, { 310,15,  5,  0,0x04}, { 311,15,  1,  0,0x04},
   { 312,15,  2,  0,0x04}, { 313,21,  6,  0,0x04}, { 314, 6,  7,  0,0x04}, { 315, 1,  8,  0,0x04},
   { 316,11,  9,  0,0x04}, { 317, 7, 10,  0,0x04}, { 318,19, 22,  0,0x04}, { 319,10, 20,  0,0x04},
   { 362, 2, 15,  0,0x04}, { 363,28, 16,  0,0x04}, { 364, 2, 18,  0,0x04}, { 365,28, 19,  0,0x04},
   { 435, 9, 12,  0,0x04}, { 436, 9, 11,  0,0x04}
};
const FieldTrait_Hash_Array NoRelatedSymV1_ftha(NoRelatedSymV1_traits, 22);
const MsgType NoRelatedSymV1_msgtype("NoRelatedSymV1");
//-------------------------------------------------------------------------------------------------
const FieldTrait NoRelatedSymV2_traits[] // refs:2
{
   {  22,15,  4,  0,0x04}, {  46,15,  1,  0,0x04}, {  48,15,  3,  0,0x04}, {  65,15,  2,  0,0x04},
   { 106,15, 14,  0,0x04}, { 107,15, 17,  0,0x04}, { 167,15,  5,  0,0x04}, { 200,21,  6,  0,0x04},
   { 201, 1,  8,  0,0x04}, { 202,11,  9,  0,0x04}, { 205, 6,  7,  0,0x04}, { 206, 7, 10,  0,0x04},
   { 207,20, 13,  0,0x04}, { 223, 9, 12,  0,0x04}, { 231, 9, 11,  0,0x04}, { 348, 2, 15,  0,0x04},
   { 349,28, 16,  0,0x04}, { 350, 2, 18,  0,0x04}, { 351,28, 19,  0,0x04}
};
const FieldTrait_Hash_Array NoRelatedSymV2_ftha(NoRelatedSymV2_traits, 19);
const MsgType NoRelatedSymV2_msgtype("NoRelatedSymV2");
//-------------------------------------------------------------------------------------------------
const FieldTrait NoRoutingIDsV1_traits[] // refs:3
{
   { 216, 1,  1,  0,0x04}, { 217,15,  2,  0,0x04}
};
const FieldTrait_Hash_Array NoRoutingIDsV1_ftha(NoRoutingIDsV1_traits, 2);
const MsgType NoRoutingIDsV1_msgtype("NoRoutingIDsV1");
//-------------------------------------------------------------------------------------------------
const FieldTrait NoTradingSessionsV1_traits[] // refs:3
{
   { 336,15,  1,  0,0x04}
};
const FieldTrait_Hash_Array NoTradingSessionsV1_ftha(NoTradingSessionsV1_traits, 1);
const MsgType NoTradingSessionsV1_msgtype("NoTradingSessionsV1");
} // namespace

//-------------------------------------------------------------------------------------------------
// Message traits
//-------------------------------------------------------------------------------------------------
const FieldTrait Heartbeat::_traits[]
{
   { 112,15,  1,  0,0x04}
};
const FieldTrait_Hash_Array Heartbeat::_ftha(Heartbeat::_traits, Heartbeat::_fieldcnt);
const MsgType Heartbeat::_msgtype("0");
//-------------------------------------------------------------------------------------------------
const FieldTrait TestRequest::_traits[]
{
   { 112,15,  1,  0,0x05}
};
const FieldTrait_Hash_Array TestRequest::_ftha(TestRequest::_traits, TestRequest::_fieldcnt);
const MsgType TestRequest::_msgtype("1");
//-------------------------------------------------------------------------------------------------
const FieldTrait ResendRequest::_traits[]
{
   {   7, 1,  1,  0,0x05}, {  16, 1,  2,  0,0x05}
};
const FieldTrait_Hash_Array ResendRequest::_ftha(ResendRequest::_traits, ResendRequest::_fieldcnt);
const MsgType ResendRequest::_msgtype("2");
//-------------------------------------------------------------------------------------------------
const FieldTrait Reject::_traits[]
{
   {  45, 1,  1,  0,0x05}, {  58,15,  5,  0,0x04}, { 354, 2,  6,  0,0x04}, { 355,28,  7,  0,0x04},
   { 371, 1,  2,  0,0x04}, { 372,15,  3,  0,0x04}, { 373, 1,  4,  0,0x04}
};
const FieldTrait_Hash_Array Reject::_ftha(Reject::_traits, Reject::_fieldcnt);
const MsgType Reject::_msgtype("3");
//-------------------------------------------------------------------------------------------------
const FieldTrait SequenceReset::_traits[]
{
   {  36, 1,  2,  0,0x05}, { 123, 8,  1,  0,0x04}
};
const FieldTrait_Hash_Array SequenceReset::_ftha(SequenceReset::_traits, SequenceReset::_fieldcnt);
const MsgType SequenceReset::_msgtype("4");
//-------------------------------------------------------------------------------------------------
const FieldTrait Logout::_traits[]
{
   {  58,15,  1,  0,0x04}, { 354, 2,  2,  0,0x04}, { 355,28,  3,  0,0x04}
};
const FieldTrait_Hash_Array Logout::_ftha(Logout::_traits, Logout::_fieldcnt);
const MsgType Logout::_msgtype("5");
//-------------------------------------------------------------------------------------------------
const FieldTrait IndicationofInterest::_traits[]
{
   {  15,19, 26,  0,0x04}, {  22,15,  7,  0,0x04}, {  23,15,  1,  0,0x05}, {  25, 7, 28,  0,0x04},
   {  26,15,  3,  0,0x04}, {  27,15, 24,  0,0x05}, {  28, 7,  2,  0,0x05}, {  44,11, 25,  0,0x04},
   {  48,15,  6,  0,0x04}, {  54, 7, 23,  0,0x05}, {  55,15,  4,  0,0x05}, {  58,15, 31,  0,0x04},
   {  60,22, 34,  0,0x04}, {  62,22, 27,  0,0x04}, {  65,15,  5,  0,0x04}, { 106,15, 17,  0,0x04},
   { 107,15, 20,  0,0x04}, { 130, 8, 29,  0,0x04}, { 149,15, 35,  0,0x04}, { 167,15,  8,  0,0x04},
   { 199, 1, 30,  0,0x0c}, { 200,21,  9,  0,0x04}, { 201, 1, 11,  0,0x04}, { 202,11, 12,  0,0x04},
   { 205, 6, 10,  0,0x04}, { 206, 7, 13,  0,0x04}, { 207,20, 16,  0,0x04}, { 215, 1, 36,  0,0x0c},
   { 218,12, 37,  0,0x04}, { 219, 7, 38,  0,0x04}, { 223, 9, 15,  0,0x04}, { 231, 9, 14,  0,0x04},
   { 348, 2, 18,  0,0x04}, { 349,28, 19,  0,0x04}, { 350, 2, 21,  0,0x04}, { 351,28, 22,  0,0x04},
   { 354, 2, 32,  0,0x04}, { 355,28, 33,  0,0x04}
};
const FieldTrait_Hash_Array IndicationofInterest::_ftha(IndicationofInterest::_traits, IndicationofInterest::_fieldcnt);
const MsgType IndicationofInterest::_msgtype("6");
//-------------------------------------------------------------------------------------------------
const FieldTrait IndicationofInterest::NoIOIQualifiers::_traits[]
{
   { 104, 7,  1,  0,0x04}
};
const FieldTrait_Hash_Array 
   IndicationofInterest::NoIOIQualifiers::_ftha(IndicationofInterest::NoIOIQualifiers::_traits, NoIOIQualifiers::_fieldcnt);
const MsgType IndicationofInterest::NoIOIQualifiers::_msgtype("NoIOIQualifiers");
//-------------------------------------------------------------------------------------------------
const FieldTrait *IndicationofInterest::NoRoutingIDs::_traits(NoRoutingIDsV1_traits);
const FieldTrait_Hash_Array& IndicationofInterest::NoRoutingIDs::_ftha(NoRoutingIDsV1_ftha);
const MsgType& IndicationofInterest::NoRoutingIDs::_msgtype(NoRoutingIDsV1_msgtype);
//-------------------------------------------------------------------------------------------------
const FieldTrait Advertisement::_traits[]
{
   {   2,15,  1,  0,0x05}, {   3,15,  3,  0,0x04}, {   4, 7, 23,  0,0x05}, {   5,15,  2,  0,0x05},
   {  15,19, 26,  0,0x04}, {  22,15,  7,  0,0x04}, {  30,20, 33,  0,0x04}, {  44,11, 25,  0,0x04},
   {  48,15,  6,  0,0x04}, {  53,10, 24,  0,0x05}, {  55,15,  4,  0,0x05}, {  58,15, 29,  0,0x04},
   {  60,22, 28,  0,0x04}, {  65,15,  5,  0,0x04}, {  75,25, 27,  0,0x04}, { 106,15, 17,  0,0x04},
   { 107,15, 20,  0,0x04}, { 149,15, 32,  0,0x04}, { 167,15,  8,  0,0x04}, { 200,21,  9,  0,0x04},
   { 201, 1, 11,  0,0x04}, { 202,11, 12,  0,0x04}, { 205, 6, 10,  0,0x04}, { 206, 7, 13,  0,0x04},
   { 207,20, 16,  0,0x04}, { 223, 9, 15,  0,0x04}, { 231, 9, 14,  0,0x04}, { 336,15, 34,  0,0x04},
   { 348, 2, 18,  0,0x04}, { 349,28, 19,  0,0x04}, { 350, 2, 21,  0,0x04}, { 351,28, 22,  0,0x04},
   { 354, 2, 30,  0,0x04}, { 355,28, 31,  0,0x04}
};
const FieldTrait_Hash_Array Advertisement::_ftha(Advertisement::_traits, Advertisement::_fieldcnt);
const MsgType Advertisement::_msgtype("7");
//-------------------------------------------------------------------------------------------------
const FieldTrait ExecutionReport::_traits[]
{
   {   1,15, 16,  0,0x04}, {   6,11, 65,  0,0x05}, {  11,15,  3,  0,0x04}, {  12,13, 73,  0,0x04},
   {  13, 7, 74,  0,0x04}, {  14,10, 64,  0,0x05}, {  15,19, 47,  0,0x04}, {  17,15,  9,  0,0x05},
   {  18,17, 54,  0,0x04}, {  19,15, 11,  0,0x04}, {  20, 7, 10,  0,0x05}, {  21, 7, 80,  0,0x04},
   {  22,15, 22,  0,0x04}, {  29, 7, 62,  0,0x04}, {  30,20, 60,  0,0x04}, {  31,11, 57,  0,0x04},
   {  32,10, 56,  0,0x04}, {  37,15,  1,  0,0x05}, {  38,10, 39,  0,0x04}, {  39, 7, 13,  0,0x05},
   {  40, 7, 41,  0,0x04}, {  41,15,  4,  0,0x04}, {  44,11, 42,  0,0x04}, {  47, 7, 55,  0,0x04},
   {  48,15, 21,  0,0x04}, {  54, 7, 38,  0,0x05}, {  55,15, 19,  0,0x05}, {  58,15, 85,  0,0x04},
   {  59, 7, 50,  0,0x04}, {  60,22, 71,  0,0x04}, {  63, 7, 17,  0,0x04}, {  64,25, 18,  0,0x04},
   {  65,15, 20,  0,0x04}, {  66,15,  8,  0,0x04}, {  75,25, 70,  0,0x04}, {  76,15,  6,  0,0x04},
   {  77, 7, 83,  0,0x04}, {  99,11, 43,  0,0x04}, { 103, 1, 14,  0,0x04}, { 106,15, 32,  0,0x04},
   { 107,15, 35,  0,0x04}, { 109,15,  5,  0,0x04}, { 110,10, 81,  0,0x04}, { 111,10, 82,  0,0x04},
   { 113, 8, 72,  0,0x04}, { 119,13, 76,  0,0x04}, { 120,19, 77,  0,0x04}, { 126,22, 53,  0,0x04},
   { 150, 7, 12,  0,0x05}, { 151,10, 63,  0,0x05}, { 152,10, 40,  0,0x04}, { 155, 9, 78,  0,0x04},
   { 156, 7, 79,  0,0x04}, { 167,15, 23,  0,0x04}, { 168,22, 51,  0,0x04}, { 192,10, 89,  0,0x04},
   { 193,25, 88,  0,0x04}, { 194,11, 58,  0,0x04}, { 195,12, 59,  0,0x04}, { 198,15,  2,  0,0x04},
   { 200,21, 24,  0,0x04}, { 201, 1, 26,  0,0x04}, { 202,11, 27,  0,0x04}, { 204, 1, 93,  0,0x04},
   { 205, 6, 25,  0,0x04}, { 206, 7, 28,  0,0x04}, { 207,20, 31,  0,0x04}, { 210,10, 84,  0,0x04},
   { 211,12, 44,  0,0x04}, { 223, 9, 30,  0,0x04}, { 231, 9, 29,  0,0x04}, { 336,15, 61,  0,0x04},
   { 348, 2, 33,  0,0x04}, { 349,28, 34,  0,0x04}, { 350, 2, 36,  0,0x04}, { 351,28, 37,  0,0x04},
   { 354, 2, 86,  0,0x04}, { 355,28, 87,  0,0x04}, { 376,15, 48,  0,0x04}, { 377, 8, 49,  0,0x04},
   { 378, 1, 15,  0,0x04}, { 381,13, 75,  0,0x04}, { 382, 1,  7,  0,0x0c}, { 388, 7, 45,  0,0x04},
   { 389,12, 46,  0,0x04}, { 424,10, 66,  0,0x04}, { 425,10, 67,  0,0x04}, { 426,11, 68,  0,0x04},
   { 427, 1, 69,  0,0x04}, { 432,25, 52,  0,0x04}, { 439,15, 90,  0,0x04}, { 440,15, 91,  0,0x04},
   { 442, 7, 92,  0,0x04}
};
const FieldTrait_Hash_Array ExecutionReport::_ftha(ExecutionReport::_traits, ExecutionReport::_fieldcnt);
const MsgType ExecutionReport::_msgtype("8");
//-------------------------------------------------------------------------------------------------
const FieldTrait ExecutionReport::NoContraBrokers::_traits[]
{
   { 337,15,  2,  0,0x04}, { 375,15,  1,  0,0x04}, { 437,10,  3,  0,0x04}, { 438,22,  4,  0,0x04}
};
const FieldTrait_Hash_Array 
   ExecutionReport::NoContraBrokers::_ftha(ExecutionReport::NoContraBrokers::_traits, NoContraBrokers::_fieldcnt);
const MsgType ExecutionReport::NoContraBrokers::_msgtype("NoContraBrokers");
//-------------------------------------------------------------------------------------------------
const FieldTrait OrderCancelReject::_traits[]
{
   {   1,15,  9,  0,0x04}, {  11,15,  3,  0,0x05}, {  37,15,  1,  0,0x05}, {  39, 7,  5,  0,0x05},
   {  41,15,  4,  0,0x05}, {  58,15, 13,  0,0x04}, {  60,22, 10,  0,0x04}, {  66,15,  8,  0,0x04},
   {  76,15,  7,  0,0x04}, { 102, 1, 12,  0,0x04}, { 109,15,  6,  0,0x04}, { 198,15,  2,  0,0x04},
   { 354, 2, 14,  0,0x04}, { 355,28, 15,  0,0x04}, { 434, 7, 11,  0,0x05}
};
const FieldTrait_Hash_Array OrderCancelReject::_ftha(OrderCancelReject::_traits, OrderCancelReject::_fieldcnt);
const MsgType OrderCancelReject::_msgtype("9");
//-------------------------------------------------------------------------------------------------
const FieldTrait Logon::_traits[]
{
   {  95, 2,  3,  0,0x04}, {  96,28,  4,  0,0x04}, {  98, 1,  1,  0,0x05}, { 108, 1,  2,  0,0x05},
   { 141, 8,  5,  0,0x04}, { 383, 1,  6,  0,0x04}, { 384, 1,  7,  0,0x0c}
};
const FieldTrait_Hash_Array Logon::_ftha(Logon::_traits, Logon::_fieldcnt);
const MsgType Logon::_msgtype("A");
//-------------------------------------------------------------------------------------------------
const FieldTrait Logon::NoMsgTypes::_traits[]
{
   { 372,15,  1,  0,0x04}, { 385, 7,  2,  0,0x04}
};
const FieldTrait_Hash_Array 
   Logon::NoMsgTypes::_ftha(Logon::NoMsgTypes::_traits, NoMsgTypes::_fieldcnt);
const MsgType Logon::NoMsgTypes::_msgtype("NoMsgTypes");
//-------------------------------------------------------------------------------------------------
const FieldTrait News::_traits[]
{
   {  33, 1,  8,  0,0x0d}, {  42,22,  1,  0,0x04}, {  61, 7,  2,  0,0x04}, {  95, 2, 10,  0,0x04},
   {  96,28, 11,  0,0x04}, { 146, 1,  7,  0,0x0c}, { 148,15,  3,  0,0x05}, { 149,15,  9,  0,0x04},
   { 215, 1,  6,  0,0x0c}, { 358, 2,  4,  0,0x04}, { 359,28,  5,  0,0x04}
};
const FieldTrait_Hash_Array News::_ftha(News::_traits, News::_fieldcnt);
const MsgType News::_msgtype("B");
//-------------------------------------------------------------------------------------------------
const FieldTrait *News::LinesOfText::_traits(LinesOfTextV1_traits);
const FieldTrait_Hash_Array& News::LinesOfText::_ftha(LinesOfTextV1_ftha);
const MsgType& News::LinesOfText::_msgtype(LinesOfTextV1_msgtype);
//-------------------------------------------------------------------------------------------------
const FieldTrait *News::NoRelatedSym::_traits(NoRelatedSymV2_traits);
const FieldTrait_Hash_Array& News::NoRelatedSym::_ftha(NoRelatedSymV2_ftha);
const MsgType& News::NoRelatedSym::_msgtype(NoRelatedSymV2_msgtype);
//-------------------------------------------------------------------------------------------------
const FieldTrait *News::NoRoutingIDs::_traits(NoRoutingIDsV1_traits);
const FieldTrait_Hash_Array& News::NoRoutingIDs::_ftha(NoRoutingIDsV1_ftha);
const MsgType& News::NoRoutingIDs::_msgtype(NoRoutingIDsV1_msgtype);
//-------------------------------------------------------------------------------------------------
const FieldTrait Email::_traits[]
{
   {  11,15, 10,  0,0x04}, {  33, 1, 11,  0,0x0d}, {  37,15,  9,  0,0x04}, {  42,22,  3,  0,0x04},
   {  94, 7,  2,  0,0x05}, {  95, 2, 12,  0,0x04}, {  96,28, 13,  0,0x04}, { 146, 1,  8,  0,0x0c},
   { 147,15,  4,  0,0x05}, { 164,15,  1,  0,0x05}, { 215, 1,  7,  0,0x0c}, { 356, 2,  5,  0,0x04},
   { 357,28,  6,  0,0x04}
};
const FieldTrait_Hash_Array Email::_ftha(Email::_traits, Email::_fieldcnt);
const MsgType Email::_msgtype("C");
//-------------------------------------------------------------------------------------------------
const FieldTrait *Email::LinesOfText::_traits(LinesOfTextV1_traits);
const FieldTrait_Hash_Array& Email::LinesOfText::_ftha(LinesOfTextV1_ftha);
const MsgType& Email::LinesOfText::_msgtype(LinesOfTextV1_msgtype);
//-------------------------------------------------------------------------------------------------
const FieldTrait *Email::NoRelatedSym::_traits(NoRelatedSymV2_traits);
const FieldTrait_Hash_Array& Email::NoRelatedSym::_ftha(NoRelatedSymV2_ftha);
const MsgType& Email::NoRelatedSym::_msgtype(NoRelatedSymV2_msgtype);
//-------------------------------------------------------------------------------------------------
const FieldTrait *Email::NoRoutingIDs::_traits(NoRoutingIDsV1_traits);
const FieldTrait_Hash_Array& Email::NoRoutingIDs::_ftha(NoRoutingIDsV1_ftha);
const MsgType& Email::NoRoutingIDs::_msgtype(NoRoutingIDsV1_msgtype);
//-------------------------------------------------------------------------------------------------
const FieldTrait NewOrderSingle::_traits[]
{
   {   1,15,  4,  0,0x04}, {  11,15,  1,  0,0x05}, {  12,13, 53,  0,0x04}, {  13, 7, 54,  0,0x04},
   {  15,19, 43,  0,0x04}, {  18,17,  9,  0,0x04}, {  21, 7,  8,  0,0x05}, {  22,15, 18,  0,0x04},
   {  23,15, 46,  0,0x04}, {  38,10, 38,  0,0x04}, {  40, 7, 40,  0,0x05}, {  44,11, 41,  0,0x04},
   {  47, 7, 55,  0,0x04}, {  48,15, 17,  0,0x04}, {  54, 7, 35,  0,0x05}, {  55,15, 15,  0,0x05},
   {  58,15, 58,  0,0x04}, {  59, 7, 48,  0,0x04}, {  60,22, 37,  0,0x05}, {  63, 7,  6,  0,0x04},
   {  64,25,  7,  0,0x04}, {  65,15, 16,  0,0x04}, {  76,15,  3,  0,0x04}, {  77, 7, 63,  0,0x04},
   {  78, 1,  5,  0,0x0c}, {  81, 7, 14,  0,0x04}, {  99,11, 42,  0,0x04}, { 100,20, 12,  0,0x04},
   { 106,15, 28,  0,0x04}, { 107,15, 31,  0,0x04}, { 109,15,  2,  0,0x04}, { 110,10, 10,  0,0x04},
   { 111,10, 11,  0,0x04}, { 114, 8, 36,  0,0x04}, { 117,15, 47,  0,0x04}, { 120,19, 57,  0,0x04},
   { 121, 8, 56,  0,0x04}, { 126,22, 51,  0,0x04}, { 140,11, 34,  0,0x04}, { 152,10, 39,  0,0x04},
   { 167,15, 19,  0,0x04}, { 168,22, 49,  0,0x04}, { 192,10, 62,  0,0x04}, { 193,25, 61,  0,0x04},
   { 200,21, 20,  0,0x04}, { 201, 1, 22,  0,0x04}, { 202,11, 23,  0,0x04}, { 203, 1, 64,  0,0x04},
   { 204, 1, 65,  0,0x04}, { 205, 6, 21,  0,0x04}, { 206, 7, 24,  0,0x04}, { 207,20, 27,  0,0x04},
   { 210,10, 66,  0,0x04}, { 211,12, 67,  0,0x04}, { 223, 9, 26,  0,0x04}, { 231, 9, 25,  0,0x04},
   { 348, 2, 29,  0,0x04}, { 349,28, 30,  0,0x04}, { 350, 2, 32,  0,0x04}, { 351,28, 33,  0,0x04},
   { 354, 2, 59,  0,0x04}, { 355,28, 60,  0,0x04}, { 376,15, 44,  0,0x04}, { 377, 8, 45,  0,0x04},
   { 386, 1, 13,  0,0x0c}, { 388, 7, 68,  0,0x04}, { 389,12, 69,  0,0x04}, { 427, 1, 52,  0,0x04},
   { 432,25, 50,  0,0x04}, { 439,15, 70,  0,0x04}, { 440,15, 71,  0,0x04}
};
const FieldTrait_Hash_Array NewOrderSingle::_ftha(NewOrderSingle::_traits, NewOrderSingle::_fieldcnt);
const MsgType NewOrderSingle::_msgtype("D");
//-------------------------------------------------------------------------------------------------
const FieldTrait *NewOrderSingle::NoAllocs::_traits(NoAllocsV1_traits);
const FieldTrait_Hash_Array& NewOrderSingle::NoAllocs::_ftha(NoAllocsV1_ftha);
const MsgType& NewOrderSingle::NoAllocs::_msgtype(NoAllocsV1_msgtype);
//-------------------------------------------------------------------------------------------------
const FieldTrait *NewOrderSingle::NoTradingSessions::_traits(NoTradingSessionsV1_traits);
const FieldTrait_Hash_Array& NewOrderSingle::NoTradingSessions::_ftha(NoTradingSessionsV1_ftha);
const MsgType& NewOrderSingle::NoTradingSessions::_msgtype(NoTradingSessionsV1_msgtype);
//-------------------------------------------------------------------------------------------------
const FieldTrait NewOrderList::_traits[]
{
   {  66,15,  1,  0,0x05}, {  68, 1, 11,  0,0x05}, {  69,15,  8,  0,0x04}, {  73, 1, 12,  0,0x0d},
   { 352, 2,  9,  0,0x04}, { 353,28, 10,  0,0x04}, { 390,15,  2,  0,0x04}, { 391,15,  3,  0,0x04},
   { 394, 1,  5,  0,0x05}, { 414, 1,  4,  0,0x04}, { 415, 1,  6,  0,0x04}, { 433, 7,  7,  0,0x04}
};
const FieldTrait_Hash_Array NewOrderList::_ftha(NewOrderList::_traits, NewOrderList::_fieldcnt);
const MsgType NewOrderList::_msgtype("E");
//-------------------------------------------------------------------------------------------------
const FieldTrait NewOrderList::NoOrders::_traits[]
{
   {   1,15,  6,  0,0x04}, {  11,15,  1,  0,0x05}, {  12,13, 56,  0,0x04}, {  13, 7, 57,  0,0x04},
   {  15,19, 46,  0,0x04}, {  18,17, 11,  0,0x04}, {  21, 7, 10,  0,0x04}, {  22,15, 20,  0,0x04},
   {  23,15, 49,  0,0x04}, {  38,10, 41,  0,0x04}, {  40, 7, 43,  0,0x04}, {  44,11, 44,  0,0x04},
   {  47, 7, 58,  0,0x04}, {  48,15, 19,  0,0x04}, {  54, 7, 37,  0,0x05}, {  55,15, 17,  0,0x05},
   {  58,15, 61,  0,0x04}, {  59, 7, 51,  0,0x04}, {  60,22, 40,  0,0x04}, {  63, 7,  8,  0,0x04},
   {  64,25,  9,  0,0x04}, {  65,15, 18,  0,0x04}, {  67, 1,  2,  0,0x05}, {  76,15,  5,  0,0x04},
   {  77, 7, 66,  0,0x04}, {  78, 1,  7,  0,0x0c}, {  81, 7, 16,  0,0x04}, {  99,11, 45,  0,0x04},
   { 100,20, 14,  0,0x04}, { 106,15, 30,  0,0x04}, { 107,15, 33,  0,0x04}, { 109,15,  4,  0,0x04},
   { 110,10, 12,  0,0x04}, { 111,10, 13,  0,0x04}, { 114, 8, 39,  0,0x04}, { 117,15, 50,  0,0x04},
   { 120,19, 60,  0,0x04}, { 121, 8, 59,  0,0x04}, { 126,22, 54,  0,0x04}, { 140,11, 36,  0,0x04},
   { 152,10, 42,  0,0x04}, { 160, 7,  3,  0,0x04}, { 167,15, 21,  0,0x04}, { 168,22, 52,  0,0x04},
   { 192,10, 65,  0,0x04}, { 193,25, 64,  0,0x04}, { 200,21, 22,  0,0x04}, { 201, 1, 24,  0,0x04},
   { 202,11, 25,  0,0x04}, { 203, 1, 67,  0,0x04}, { 204, 1, 68,  0,0x04}, { 205, 6, 23,  0,0x04},
   { 206, 7, 26,  0,0x04}, { 207,20, 29,  0,0x04}, { 210,10, 69,  0,0x04}, { 211,12, 70,  0,0x04},
   { 223, 9, 28,  0,0x04}, { 231, 9, 27,  0,0x04}, { 348, 2, 31,  0,0x04}, { 349,28, 32,  0,0x04},
   { 350, 2, 34,  0,0x04}, { 351,28, 35,  0,0x04}, { 354, 2, 62,  0,0x04}, { 355,28, 63,  0,0x04},
   { 376,15, 47,  0,0x04}, { 377, 8, 48,  0,0x04}, { 386, 1, 15,  0,0x0c}, { 388, 7, 71,  0,0x04},
   { 389,12, 72,  0,0x04}, { 401, 1, 38,  0,0x04}, { 427, 1, 55,  0,0x04}, { 432,25, 53,  0,0x04},
   { 439,15, 73,  0,0x04}, { 440,15, 74,  0,0x04}
};
const FieldTrait_Hash_Array 
   NewOrderList::NoOrders::_ftha(NewOrderList::NoOrders::_traits, NoOrders::_fieldcnt);
const MsgType NewOrderList::NoOrders::_msgtype("NoOrders");
//-------------------------------------------------------------------------------------------------
const FieldTrait *NewOrderList::NoOrders::NoAllocs::_traits(NoAllocsV1_traits);
const FieldTrait_Hash_Array& NewOrderList::NoOrders::NoAllocs::_ftha(NoAllocsV1_ftha);
const MsgType& NewOrderList::NoOrders::NoAllocs::_msgtype(NoAllocsV1_msgtype);
//-------------------------------------------------------------------------------------------------
const FieldTrait *NewOrderList::NoOrders::NoTradingSessions::_traits(NoTradingSessionsV1_traits);
const FieldTrait_Hash_Array& NewOrderList::NoOrders::NoTradingSessions::_ftha(NoTradingSessionsV1_ftha);
const MsgType& NewOrderList::NoOrders::NoTradingSessions::_msgtype(NoTradingSessionsV1_msgtype);
//-------------------------------------------------------------------------------------------------
const FieldTrait OrderCancelRequest::_traits[]
{
   {   1,15,  5,  0,0x04}, {  11,15,  3,  0,0x05}, {  22,15, 11,  0,0x04}, {  37,15,  2,  0,0x04},
   {  38,10, 29,  0,0x04}, {  40, 7, 30,  0,0x04}, {  41,15,  1,  0,0x05}, {  48,15, 10,  0,0x04},
   {  54, 7, 27,  0,0x05}, {  55,15,  8,  0,0x05}, {  58,15, 34,  0,0x04}, {  60,22, 28,  0,0x05},
   {  65,15,  9,  0,0x04}, {  66,15,  4,  0,0x04}, {  76,15,  7,  0,0x04}, { 106,15, 21,  0,0x04},
   { 107,15, 24,  0,0x04}, { 109,15,  6,  0,0x04}, { 152,10, 31,  0,0x04}, { 167,15, 12,  0,0x04},
   { 200,21, 13,  0,0x04}, { 201, 1, 15,  0,0x04}, { 202,11, 16,  0,0x04}, { 205, 6, 14,  0,0x04},
   { 206, 7, 17,  0,0x04}, { 207,20, 20,  0,0x04}, { 223, 9, 19,  0,0x04}, { 231, 9, 18,  0,0x04},
   { 348, 2, 22,  0,0x04}, { 349,28, 23,  0,0x04}, { 350, 2, 25,  0,0x04}, { 351,28, 26,  0,0x04},
   { 354, 2, 35,  0,0x04}, { 355,28, 36,  0,0x04}, { 376,15, 32,  0,0x04}, { 377, 8, 33,  0,0x04}
};
const FieldTrait_Hash_Array OrderCancelRequest::_ftha(OrderCancelRequest::_traits, OrderCancelRequest::_fieldcnt);
const MsgType OrderCancelRequest::_msgtype("F");
//-------------------------------------------------------------------------------------------------
const FieldTrait OrderCancelReplaceRequest::_traits[]
{
   {   1,15,  7,  0,0x04}, {  11,15,  5,  0,0x05}, {  12,13, 54,  0,0x04}, {  13, 7, 55,  0,0x04},
   {  14,10, 71,  0,0x04}, {  15,19, 48,  0,0x04}, {  18,17, 12,  0,0x04}, {  21, 7, 11,  0,0x05},
   {  22,15, 20,  0,0x04}, {  37,15,  1,  0,0x04}, {  38,10, 38,  0,0x04}, {  40, 7, 40,  0,0x05},
   {  41,15,  4,  0,0x05}, {  44,11, 41,  0,0x04}, {  47, 7, 56,  0,0x04}, {  48,15, 19,  0,0x04},
   {  54, 7, 36,  0,0x05}, {  55,15, 17,  0,0x05}, {  58,15, 59,  0,0x04}, {  59, 7, 49,  0,0x04},
   {  60,22, 37,  0,0x05}, {  63, 7,  9,  0,0x04}, {  64,25, 10,  0,0x04}, {  65,15, 18,  0,0x04},
   {  66,15,  6,  0,0x04}, {  76,15,  3,  0,0x04}, {  77, 7, 64,  0,0x04}, {  78, 1,  8,  0,0x0c},
   {  99,11, 42,  0,0x04}, { 100,20, 15,  0,0x04}, { 106,15, 30,  0,0x04}, { 107,15, 33,  0,0x04},
   { 109,15,  2,  0,0x04}, { 110,10, 13,  0,0x04}, { 111,10, 14,  0,0x04}, { 114, 8, 68,  0,0x04},
   { 120,19, 58,  0,0x04}, { 121, 8, 57,  0,0x04}, { 126,22, 52,  0,0x04}, { 152,10, 39,  0,0x04},
   { 167,15, 21,  0,0x04}, { 168,22, 50,  0,0x04}, { 192,10, 63,  0,0x04}, { 193,25, 62,  0,0x04},
   { 200,21, 22,  0,0x04}, { 201, 1, 24,  0,0x04}, { 202,11, 25,  0,0x04}, { 203, 1, 65,  0,0x04},
   { 204, 1, 66,  0,0x04}, { 205, 6, 23,  0,0x04}, { 206, 7, 26,  0,0x04}, { 207,20, 29,  0,0x04},
   { 210,10, 67,  0,0x04}, { 211,12, 43,  0,0x04}, { 223, 9, 28,  0,0x04}, { 231, 9, 27,  0,0x04},
   { 348, 2, 31,  0,0x04}, { 349,28, 32,  0,0x04}, { 350, 2, 34,  0,0x04}, { 351,28, 35,  0,0x04},
   { 354, 2, 60,  0,0x04}, { 355,28, 61,  0,0x04}, { 376,15, 46,  0,0x04}, { 377, 8, 47,  0,0x04},
   { 386, 1, 16,  0,0x0c}, { 388, 7, 44,  0,0x04}, { 389,12, 45,  0,0x04}, { 427, 1, 53,  0,0x04},
   { 432,25, 51,  0,0x04}, { 439,15, 69,  0,0x04}, { 440,15, 70,  0,0x04}
};
const FieldTrait_Hash_Array OrderCancelReplaceRequest::_ftha(OrderCancelReplaceRequest::_traits, OrderCancelReplaceRequest::_fieldcnt);
const MsgType OrderCancelReplaceRequest::_msgtype("G");
//-------------------------------------------------------------------------------------------------
const FieldTrait *OrderCancelReplaceRequest::NoAllocs::_traits(NoAllocsV1_traits);
const FieldTrait_Hash_Array& OrderCancelReplaceRequest::NoAllocs::_ftha(NoAllocsV1_ftha);
const MsgType& OrderCancelReplaceRequest::NoAllocs::_msgtype(NoAllocsV1_msgtype);
//-------------------------------------------------------------------------------------------------
const FieldTrait *OrderCancelReplaceRequest::NoTradingSessions::_traits(NoTradingSessionsV1_traits);
const FieldTrait_Hash_Array& OrderCancelReplaceRequest::NoTradingSessions::_ftha(NoTradingSessionsV1_ftha);
const MsgType& OrderCancelReplaceRequest::NoTradingSessions::_msgtype(NoTradingSessionsV1_msgtype);
//-------------------------------------------------------------------------------------------------
const FieldTrait OrderStatusRequest::_traits[]
{
   {   1,15,  4,  0,0x04}, {  11,15,  2,  0,0x05}, {  22,15,  9,  0,0x04}, {  37,15,  1,  0,0x04},
   {  48,15,  8,  0,0x04}, {  54, 7, 25,  0,0x05}, {  55,15,  6,  0,0x05}, {  65,15,  7,  0,0x04},
   {  76,15,  5,  0,0x04}, { 106,15, 19,  0,0x04}, { 107,15, 22,  0,0x04}, { 109,15,  3,  0,0x04},
   { 167,15, 10,  0,0x04}, { 200,21, 11,  0,0x04}, { 201, 1, 13,  0,0x04}, { 202,11, 14,  0,0x04},
   { 205, 6, 12,  0,0x04}, { 206, 7, 15,  0,0x04}, { 207,20, 18,  0,0x04}, { 223, 9, 17,  0,0x04},
   { 231, 9, 16,  0,0x04}, { 348, 2, 20,  0,0x04}, { 349,28, 21,  0,0x04}, { 350, 2, 23,  0,0x04},
   { 351,28, 24,  0,0x04}
};
const FieldTrait_Hash_Array OrderStatusRequest::_ftha(OrderStatusRequest::_traits, OrderStatusRequest::_fieldcnt);
const MsgType OrderStatusRequest::_msgtype("H");
//-------------------------------------------------------------------------------------------------
const FieldTrait Allocation::_traits[]
{
   {   6,11, 31,  0,0x05}, {  15,19, 32,  0,0x04}, {  22,15, 12,  0,0x04}, {  30,20, 29,  0,0x04},
   {  48,15, 11,  0,0x04}, {  53,10, 28,  0,0x05}, {  54, 7,  8,  0,0x05}, {  55,15,  9,  0,0x05},
   {  58,15, 41,  0,0x04}, {  60,22, 35,  0,0x04}, {  63, 7, 36,  0,0x04}, {  64,25, 37,  0,0x04},
   {  65,15, 10,  0,0x04}, {  70,15,  1,  0,0x05}, {  71, 7,  2,  0,0x05}, {  72,15,  3,  0,0x04},
   {  73, 1,  6,  0,0x0c}, {  74, 1, 33,  0,0x04}, {  75,25, 34,  0,0x05}, {  77, 7, 40,  0,0x04},
   {  78, 1, 46,  0,0x0c}, { 106,15, 22,  0,0x04}, { 107,15, 25,  0,0x04}, { 118,13, 39,  0,0x04},
   { 124, 1,  7,  0,0x0c}, { 157, 1, 44,  0,0x04}, { 158, 9, 45,  0,0x04}, { 167,15, 13,  0,0x04},
   { 196,15,  4,  0,0x04}, { 197, 1,  5,  0,0x04}, { 200,21, 14,  0,0x04}, { 201, 1, 16,  0,0x04},
   { 202,11, 17,  0,0x04}, { 205, 6, 15,  0,0x04}, { 206, 7, 18,  0,0x04}, { 207,20, 21,  0,0x04},
   { 223, 9, 20,  0,0x04}, { 231, 9, 19,  0,0x04}, { 336,15, 30,  0,0x04}, { 348, 2, 23,  0,0x04},
   { 349,28, 24,  0,0x04}, { 350, 2, 26,  0,0x04}, { 351,28, 27,  0,0x04}, { 354, 2, 42,  0,0x04},
   { 355,28, 43,  0,0x04}, { 381,13, 38,  0,0x04}
};
const FieldTrait_Hash_Array Allocation::_ftha(Allocation::_traits, Allocation::_fieldcnt);
const MsgType Allocation::_msgtype("J");
//-------------------------------------------------------------------------------------------------
const FieldTrait Allocation::NoOrders::_traits[]
{
   {  11,15,  1,  0,0x04}, {  37,15,  2,  0,0x04}, {  66,15,  4,  0,0x04}, { 105,15,  5,  0,0x04},
   { 198,15,  3,  0,0x04}
};
const FieldTrait_Hash_Array 
   Allocation::NoOrders::_ftha(Allocation::NoOrders::_traits, NoOrders::_fieldcnt);
const MsgType Allocation::NoOrders::_msgtype("NoOrders");
//-------------------------------------------------------------------------------------------------
const FieldTrait Allocation::NoAllocs::_traits[]
{
   {  12,13, 13,  0,0x04}, {  13, 7, 14,  0,0x04}, {  76,15, 11,  0,0x04}, {  79,15,  1,  0,0x04},
   {  80,10,  3,  0,0x05}, {  81, 7,  4,  0,0x04}, {  92,15,  5,  0,0x04}, { 109,15, 12,  0,0x04},
   { 119,13, 17,  0,0x04}, { 120,19, 18,  0,0x04}, { 136, 1, 23,  0,0x0c}, { 153,11, 15,  0,0x04},
   { 154,13, 16,  0,0x04}, { 155, 9, 19,  0,0x04}, { 156, 7, 20,  0,0x04}, { 159,13, 21,  0,0x04},
   { 160, 7, 22,  0,0x04}, { 161,15,  8,  0,0x04}, { 208, 8,  6,  0,0x04}, { 209, 1,  7,  0,0x04},
   { 360, 2,  9,  0,0x04}, { 361,28, 10,  0,0x04}, { 366,11,  2,  0,0x04}
};
const FieldTrait_Hash_Array 
   Allocation::NoAllocs::_ftha(Allocation::NoAllocs::_traits, NoAllocs::_fieldcnt);
const MsgType Allocation::NoAllocs::_msgtype("NoAllocs");
//-------------------------------------------------------------------------------------------------
const FieldTrait Allocation::NoAllocs::NoMiscFees::_traits[]
{
   { 137,13,  1,  0,0x04}, { 138,19,  2,  0,0x04}, { 139, 7,  3,  0,0x04}
};
const FieldTrait_Hash_Array 
   Allocation::NoAllocs::NoMiscFees::_ftha(Allocation::NoAllocs::NoMiscFees::_traits, NoMiscFees::_fieldcnt);
const MsgType Allocation::NoAllocs::NoMiscFees::_msgtype("NoMiscFees");
//-------------------------------------------------------------------------------------------------
const FieldTrait Allocation::NoExecs::_traits[]
{
   {  17,15,  2,  0,0x04}, {  29, 7,  4,  0,0x04}, {  31,11,  3,  0,0x04}, {  32,10,  1,  0,0x04}
};
const FieldTrait_Hash_Array 
   Allocation::NoExecs::_ftha(Allocation::NoExecs::_traits, NoExecs::_fieldcnt);
const MsgType Allocation::NoExecs::_msgtype("NoExecs");
//-------------------------------------------------------------------------------------------------
const FieldTrait ListCancelRequest::_traits[]
{
   {  58,15,  3,  0,0x04}, {  60,22,  2,  0,0x05}, {  66,15,  1,  0,0x05}, { 354, 2,  4,  0,0x04},
   { 355,28,  5,  0,0x04}
};
const FieldTrait_Hash_Array ListCancelRequest::_ftha(ListCancelRequest::_traits, ListCancelRequest::_fieldcnt);
const MsgType ListCancelRequest::_msgtype("K");
//-------------------------------------------------------------------------------------------------
const FieldTrait ListExecute::_traits[]
{
   {  58,15,  5,  0,0x04}, {  60,22,  4,  0,0x05}, {  66,15,  1,  0,0x05}, { 354, 2,  6,  0,0x04},
   { 355,28,  7,  0,0x04}, { 390,15,  3,  0,0x04}, { 391,15,  2,  0,0x04}
};
const FieldTrait_Hash_Array ListExecute::_ftha(ListExecute::_traits, ListExecute::_fieldcnt);
const MsgType ListExecute::_msgtype("L");
//-------------------------------------------------------------------------------------------------
const FieldTrait ListStatusRequest::_traits[]
{
   {  58,15,  2,  0,0x04}, {  66,15,  1,  0,0x05}, { 354, 2,  3,  0,0x04}, { 355,28,  4,  0,0x04}
};
const FieldTrait_Hash_Array ListStatusRequest::_ftha(ListStatusRequest::_traits, ListStatusRequest::_fieldcnt);
const MsgType ListStatusRequest::_msgtype("M");
//-------------------------------------------------------------------------------------------------
const FieldTrait ListStatus::_traits[]
{
   {  60,22,  9,  0,0x04}, {  66,15,  1,  0,0x05}, {  68, 1, 10,  0,0x05}, {  73, 1, 11,  0,0x0d},
   {  82, 1,  3,  0,0x05}, {  83, 1,  5,  0,0x05}, { 429, 1,  2,  0,0x05}, { 431, 1,  4,  0,0x05},
   { 444,15,  6,  0,0x04}, { 445, 2,  7,  0,0x04}, { 446,28,  8,  0,0x04}
};
const FieldTrait_Hash_Array ListStatus::_ftha(ListStatus::_traits, ListStatus::_fieldcnt);
const MsgType ListStatus::_msgtype("N");
//-------------------------------------------------------------------------------------------------
const FieldTrait ListStatus::NoOrders::_traits[]
{
   {   6,11,  6,  0,0x05}, {  11,15,  1,  0,0x05}, {  14,10,  2,  0,0x05}, {  39, 7,  3,  0,0x05},
   {  58,15,  8,  0,0x04}, {  84,10,  5,  0,0x05}, { 103, 1,  7,  0,0x04}, { 151,10,  4,  0,0x05},
   { 354, 2,  9,  0,0x04}, { 355,28, 10,  0,0x04}
};
const FieldTrait_Hash_Array 
   ListStatus::NoOrders::_ftha(ListStatus::NoOrders::_traits, NoOrders::_fieldcnt);
const MsgType ListStatus::NoOrders::_msgtype("NoOrders");
//-------------------------------------------------------------------------------------------------
const FieldTrait AllocationACK::_traits[]
{
   {  58,15,  8,  0,0x04}, {  60,22,  5,  0,0x04}, {  70,15,  3,  0,0x05}, {  75,25,  4,  0,0x05},
   {  76,15,  2,  0,0x04}, {  87, 1,  6,  0,0x05}, {  88, 1,  7,  0,0x04}, { 109,15,  1,  0,0x04},
   { 354, 2,  9,  0,0x04}, { 355,28, 10,  0,0x04}
};
const FieldTrait_Hash_Array AllocationACK::_ftha(AllocationACK::_traits, AllocationACK::_fieldcnt);
const MsgType AllocationACK::_msgtype("P");
//-------------------------------------------------------------------------------------------------
const FieldTrait DontKnowTrade::_traits[]
{
   {  17,15,  2,  0,0x05}, {  22,15,  7,  0,0x04}, {  31,11, 27,  0,0x04}, {  32,10, 26,  0,0x04},
   {  37,15,  1,  0,0x05}, {  38,10, 24,  0,0x04}, {  48,15,  6,  0,0x04}, {  54, 7, 23,  0,0x05},
   {  55,15,  4,  0,0x05}, {  58,15, 28,  0,0x04}, {  65,15,  5,  0,0x04}, { 106,15, 17,  0,0x04},
   { 107,15, 20,  0,0x04}, { 127, 7,  3,  0,0x05}, { 152,10, 25,  0,0x04}, { 167,15,  8,  0,0x04},
   { 200,21,  9,  0,0x04}, { 201, 1, 11,  0,0x04}, { 202,11, 12,  0,0x04}, { 205, 6, 10,  0,0x04},
   { 206, 7, 13,  0,0x04}, { 207,20, 16,  0,0x04}, { 223, 9, 15,  0,0x04}, { 231, 9, 14,  0,0x04},
   { 348, 2, 18,  0,0x04}, { 349,28, 19,  0,0x04}, { 350, 2, 21,  0,0x04}, { 351,28, 22,  0,0x04},
   { 354, 2, 29,  0,0x04}, { 355,28, 30,  0,0x04}
};
const FieldTrait_Hash_Array DontKnowTrade::_ftha(DontKnowTrade::_traits, DontKnowTrade::_fieldcnt);
const MsgType DontKnowTrade::_msgtype("Q");
//-------------------------------------------------------------------------------------------------
const FieldTrait QuoteRequest::_traits[]
{
   { 131,15,  1,  0,0x05}, { 146, 1,  2,  0,0x0d}
};
const FieldTrait_Hash_Array QuoteRequest::_ftha(QuoteRequest::_traits, QuoteRequest::_fieldcnt);
const MsgType QuoteRequest::_msgtype("R");
//-------------------------------------------------------------------------------------------------
const FieldTrait QuoteRequest::NoRelatedSym::_traits[]
{
   {  15,19, 31,  0,0x04}, {  22,15,  4,  0,0x04}, {  38,10, 24,  0,0x04}, {  40, 7, 26,  0,0x04},
   {  48,15,  3,  0,0x04}, {  54, 7, 23,  0,0x04}, {  55,15,  1,  0,0x05}, {  60,22, 30,  0,0x04},
   {  64,25, 25,  0,0x04}, {  65,15,  2,  0,0x04}, { 106,15, 14,  0,0x04}, { 107,15, 17,  0,0x04},
   { 126,22, 29,  0,0x04}, { 140,11, 20,  0,0x04}, { 167,15,  5,  0,0x04}, { 192,10, 28,  0,0x04},
   { 193,25, 27,  0,0x04}, { 200,21,  6,  0,0x04}, { 201, 1,  8,  0,0x04}, { 202,11,  9,  0,0x04},
   { 205, 6,  7,  0,0x04}, { 206, 7, 10,  0,0x04}, { 207,20, 13,  0,0x04}, { 223, 9, 12,  0,0x04},
   { 231, 9, 11,  0,0x04}, { 303, 1, 21,  0,0x04}, { 336,15, 22,  0,0x04}, { 348, 2, 15,  0,0x04},
   { 349,28, 16,  0,0x04}, { 350, 2, 18,  0,0x04}, { 351,28, 19,  0,0x04}
};
const FieldTrait_Hash_Array 
   QuoteRequest::NoRelatedSym::_ftha(QuoteRequest::NoRelatedSym::_traits, NoRelatedSym::_fieldcnt);
const MsgType QuoteRequest::NoRelatedSym::_msgtype("NoRelatedSym");
//-------------------------------------------------------------------------------------------------
const FieldTrait Quote::_traits[]
{
   {  15,19, 38,  0,0x04}, {  22,15,  8,  0,0x04}, {  40, 7, 35,  0,0x04}, {  48,15,  7,  0,0x04},
   {  55,15,  5,  0,0x05}, {  60,22, 33,  0,0x04}, {  62,22, 28,  0,0x04}, {  64,25, 34,  0,0x04},
   {  65,15,  6,  0,0x04}, { 106,15, 18,  0,0x04}, { 107,15, 21,  0,0x04}, { 117,15,  2,  0,0x05},
   { 131,15,  1,  0,0x04}, { 132,11, 24,  0,0x04}, { 133,11, 25,  0,0x04}, { 134,10, 26,  0,0x04},
   { 135,10, 27,  0,0x04}, { 167,15,  9,  0,0x04}, { 188,11, 29,  0,0x04}, { 189,12, 31,  0,0x04},
   { 190,11, 30,  0,0x04}, { 191,12, 32,  0,0x04}, { 192,10, 37,  0,0x04}, { 193,25, 36,  0,0x04},
   { 200,21, 10,  0,0x04}, { 201, 1, 12,  0,0x04}, { 202,11, 13,  0,0x04}, { 205, 6, 11,  0,0x04},
   { 206, 7, 14,  0,0x04}, { 207,20, 17,  0,0x04}, { 223, 9, 16,  0,0x04}, { 231, 9, 15,  0,0x04},
   { 301, 1,  3,  0,0x04}, { 336,15,  4,  0,0x04}, { 348, 2, 19,  0,0x04}, { 349,28, 20,  0,0x04},
   { 350, 2, 22,  0,0x04}, { 351,28, 23,  0,0x04}
};
const FieldTrait_Hash_Array Quote::_ftha(Quote::_traits, Quote::_fieldcnt);
const MsgType Quote::_msgtype("S");
//-------------------------------------------------------------------------------------------------
const FieldTrait SettlementInstructions::_traits[]
{
   {  30,20, 10,  0,0x04}, {  54, 7, 12,  0,0x04}, {  60,22, 15,  0,0x05}, {  70,15,  9,  0,0x04},
   {  75,25,  8,  0,0x04}, {  76,15, 17,  0,0x04}, {  79,15,  6,  0,0x05}, { 109,15, 16,  0,0x04},
   { 160, 7,  4,  0,0x05}, { 162,15,  1,  0,0x05}, { 163, 7,  2,  0,0x05}, { 165, 7,  5,  0,0x05},
   { 166,15,  7,  0,0x04}, { 167,15, 13,  0,0x04}, { 168,22, 14,  0,0x04}, { 169, 1, 18,  0,0x04},
   { 170,15, 19,  0,0x04}, { 171,15, 20,  0,0x04}, { 172, 1, 21,  0,0x04}, { 173,15, 22,  0,0x04},
   { 174,15, 23,  0,0x04}, { 175,15, 24,  0,0x04}, { 176,15, 25,  0,0x04}, { 177,15, 26,  0,0x04},
   { 178,15, 27,  0,0x04}, { 179,15, 28,  0,0x04}, { 180,15, 29,  0,0x04}, { 181,15, 30,  0,0x04},
   { 182,15, 31,  0,0x04}, { 183,15, 32,  0,0x04}, { 184,15, 33,  0,0x04}, { 185,15, 34,  0,0x04},
   { 186,15, 35,  0,0x04}, { 187,15, 36,  0,0x04}, { 214,15,  3,  0,0x05}, { 336,15, 11,  0,0x04}
};
const FieldTrait_Hash_Array SettlementInstructions::_ftha(SettlementInstructions::_traits, SettlementInstructions::_fieldcnt);
const MsgType SettlementInstructions::_msgtype("T");
//-------------------------------------------------------------------------------------------------
const FieldTrait MarketDataRequest::_traits[]
{
   { 146, 1,  7,  0,0x0d}, { 262,15,  1,  0,0x05}, { 263, 7,  2,  0,0x05}, { 264, 1,  3,  0,0x05},
   { 265, 1,  4,  0,0x04}, { 266, 8,  5,  0,0x04}, { 267, 1,  6,  0,0x0d}
};
const FieldTrait_Hash_Array MarketDataRequest::_ftha(MarketDataRequest::_traits, MarketDataRequest::_fieldcnt);
const MsgType MarketDataRequest::_msgtype("V");
//-------------------------------------------------------------------------------------------------
const FieldTrait MarketDataRequest::NoRelatedSym::_traits[]
{
   {  22,15,  4,  0,0x04}, {  48,15,  3,  0,0x04}, {  55,15,  1,  0,0x05}, {  65,15,  2,  0,0x04},
   { 106,15, 14,  0,0x04}, { 107,15, 17,  0,0x04}, { 167,15,  5,  0,0x04}, { 200,21,  6,  0,0x04},
   { 201, 1,  8,  0,0x04}, { 202,11,  9,  0,0x04}, { 205, 6,  7,  0,0x04}, { 206, 7, 10,  0,0x04},
   { 207,20, 13,  0,0x04}, { 223, 9, 12,  0,0x04}, { 231, 9, 11,  0,0x04}, { 336,15, 20,  0,0x04},
   { 348, 2, 15,  0,0x04}, { 349,28, 16,  0,0x04}, { 350, 2, 18,  0,0x04}, { 351,28, 19,  0,0x04}
};
const FieldTrait_Hash_Array 
   MarketDataRequest::NoRelatedSym::_ftha(MarketDataRequest::NoRelatedSym::_traits, NoRelatedSym::_fieldcnt);
const MsgType MarketDataRequest::NoRelatedSym::_msgtype("NoRelatedSym");
//-------------------------------------------------------------------------------------------------
const FieldTrait MarketDataRequest::NoMDEntryTypes::_traits[]
{
   { 269, 7,  1,  0,0x05}
};
const FieldTrait_Hash_Array 
   MarketDataRequest::NoMDEntryTypes::_ftha(MarketDataRequest::NoMDEntryTypes::_traits, NoMDEntryTypes::_fieldcnt);
const MsgType MarketDataRequest::NoMDEntryTypes::_msgtype("NoMDEntryTypes");
//-------------------------------------------------------------------------------------------------
const FieldTrait MarketDataSnapshotFullRefresh::_traits[]
{
   {  22,15,  5,  0,0x04}, {  48,15,  4,  0,0x04}, {  55,15,  2,  0,0x05}, {  65,15,  3,  0,0x04},
   { 106,15, 15,  0,0x04}, { 107,15, 18,  0,0x04}, { 167,15,  6,  0,0x04}, { 200,21,  7,  0,0x04},
   { 201, 1,  9,  0,0x04}, { 202,11, 10,  0,0x04}, { 205, 6,  8,  0,0x04}, { 206, 7, 11,  0,0x04},
   { 207,20, 14,  0,0x04}, { 223, 9, 13,  0,0x04}, { 231, 9, 12,  0,0x04}, { 262,15,  1,  0,0x04},
   { 268, 1, 24,  0,0x0d}, { 291, 7, 21,  0,0x04}, { 292, 7, 22,  0,0x04}, { 348, 2, 16,  0,0x04},
   { 349,28, 17,  0,0x04}, { 350, 2, 19,  0,0x04}, { 351,28, 20,  0,0x04}, { 387,10, 23,  0,0x04}
};
const FieldTrait_Hash_Array MarketDataSnapshotFullRefresh::_ftha(MarketDataSnapshotFullRefresh::_traits, MarketDataSnapshotFullRefresh::_fieldcnt);
const MsgType MarketDataSnapshotFullRefresh::_msgtype("W");
//-------------------------------------------------------------------------------------------------
const FieldTrait MarketDataSnapshotFullRefresh::NoMDEntries::_traits[]
{
   {  15,19,  3,  0,0x04}, {  18,17, 20,  0,0x04}, {  37,15, 22,  0,0x04}, {  58,15, 28,  0,0x04},
   {  59, 7, 16,  0,0x04}, { 110,10, 19,  0,0x04}, { 126,22, 18,  0,0x04}, { 269, 7,  1,  0,0x05},
   { 270,11,  2,  0,0x05}, { 271,10,  4,  0,0x04}, { 272,24,  5,  0,0x04}, { 273,23,  6,  0,0x04},
   { 274, 7,  7,  0,0x04}, { 275,20,  8,  0,0x04}, { 276,17, 10,  0,0x04}, { 277,17, 11,  0,0x04},
   { 282,15, 12,  0,0x04}, { 283,15, 13,  0,0x04}, { 284,15, 14,  0,0x04}, { 286, 7, 15,  0,0x04},
   { 287, 1, 21,  0,0x04}, { 288,15, 24,  0,0x04}, { 289,15, 25,  0,0x04}, { 290, 1, 27,  0,0x04},
   { 299,15, 23,  0,0x04}, { 336,15,  9,  0,0x04}, { 346, 1, 26,  0,0x04}, { 354, 2, 29,  0,0x04},
   { 355,28, 30,  0,0x04}, { 432,25, 17,  0,0x04}
};
const FieldTrait_Hash_Array 
   MarketDataSnapshotFullRefresh::NoMDEntries::_ftha(MarketDataSnapshotFullRefresh::NoMDEntries::_traits, NoMDEntries::_fieldcnt);
const MsgType MarketDataSnapshotFullRefresh::NoMDEntries::_msgtype("NoMDEntries");
//-------------------------------------------------------------------------------------------------
const FieldTrait MarketDataIncrementalRefresh::_traits[]
{
   { 262,15,  1,  0,0x04}, { 268, 1,  2,  0,0x0d}
};
const FieldTrait_Hash_Array MarketDataIncrementalRefresh::_ftha(MarketDataIncrementalRefresh::_traits, MarketDataIncrementalRefresh::_fieldcnt);
const MsgType MarketDataIncrementalRefresh::_msgtype("X");
//-------------------------------------------------------------------------------------------------
const FieldTrait MarketDataIncrementalRefresh::NoMDEntries::_traits[]
{
   {  15,19, 28,  0,0x04}, {  18,17, 45,  0,0x04}, {  22,15,  9,  0,0x04}, {  37,15, 47,  0,0x04},
   {  48,15,  8,  0,0x04}, {  55,15,  6,  0,0x04}, {  58,15, 54,  0,0x04}, {  59, 7, 41,  0,0x04},
   {  65,15,  7,  0,0x04}, { 106,15, 19,  0,0x04}, { 107,15, 22,  0,0x04}, { 110,10, 44,  0,0x04},
   { 126,22, 43,  0,0x04}, { 167,15, 10,  0,0x04}, { 200,21, 11,  0,0x04}, { 201, 1, 13,  0,0x04},
   { 202,11, 14,  0,0x04}, { 205, 6, 12,  0,0x04}, { 206, 7, 15,  0,0x04}, { 207,20, 18,  0,0x04},
   { 223, 9, 17,  0,0x04}, { 231, 9, 16,  0,0x04}, { 269, 7,  3,  0,0x04}, { 270,11, 27,  0,0x04},
   { 271,10, 29,  0,0x04}, { 272,24, 30,  0,0x04}, { 273,23, 31,  0,0x04}, { 274, 7, 32,  0,0x04},
   { 275,20, 33,  0,0x04}, { 276,17, 35,  0,0x04}, { 277,17, 36,  0,0x04}, { 278,15,  4,  0,0x04},
   { 279, 7,  1,  0,0x05}, { 280,15,  5,  0,0x04}, { 282,15, 37,  0,0x04}, { 283,15, 38,  0,0x04},
   { 284,15, 39,  0,0x04}, { 285, 7,  2,  0,0x04}, { 286, 7, 40,  0,0x04}, { 287, 1, 46,  0,0x04},
   { 288,15, 49,  0,0x04}, { 289,15, 50,  0,0x04}, { 290, 1, 52,  0,0x04}, { 291, 7, 25,  0,0x04},
   { 292, 7, 26,  0,0x04}, { 299,15, 48,  0,0x04}, { 336,15, 34,  0,0x04}, { 346, 1, 51,  0,0x04},
   { 348, 2, 20,  0,0x04}, { 349,28, 21,  0,0x04}, { 350, 2, 23,  0,0x04}, { 351,28, 24,  0,0x04},
   { 354, 2, 55,  0,0x04}, { 355,28, 56,  0,0x04}, { 387,10, 53,  0,0x04}, { 432,25, 42,  0,0x04}
};
const FieldTrait_Hash_Array 
   MarketDataIncrementalRefresh::NoMDEntries::_ftha(MarketDataIncrementalRefresh::NoMDEntries::_traits, NoMDEntries::_fieldcnt);
const MsgType MarketDataIncrementalRefresh::NoMDEntries::_msgtype("NoMDEntries");
//-------------------------------------------------------------------------------------------------
const FieldTrait MarketDataRequestReject::_traits[]
{
   {  58,15,  3,  0,0x04}, { 262,15,  1,  0,0x05}, { 281, 7,  2,  0,0x04}, { 354, 2,  4,  0,0x04},
   { 355,28,  5,  0,0x04}
};
const FieldTrait_Hash_Array MarketDataRequestReject::_ftha(MarketDataRequestReject::_traits, MarketDataRequestReject::_fieldcnt);
const MsgType MarketDataRequestReject::_msgtype("Y");
//-------------------------------------------------------------------------------------------------
const FieldTrait QuoteCancel::_traits[]
{
   { 117,15,  2,  0,0x05}, { 131,15,  1,  0,0x04}, { 295, 1,  6,  0,0x0d}, { 298, 1,  3,  0,0x05},
   { 301, 1,  4,  0,0x04}, { 336,15,  5,  0,0x04}
};
const FieldTrait_Hash_Array QuoteCancel::_ftha(QuoteCancel::_traits, QuoteCancel::_fieldcnt);
const MsgType QuoteCancel::_msgtype("Z");
//-------------------------------------------------------------------------------------------------
const FieldTrait QuoteCancel::NoQuoteEntries::_traits[]
{
   {  22,15,  4,  0,0x04}, {  48,15,  3,  0,0x04}, {  55,15,  1,  0,0x05}, {  65,15,  2,  0,0x04},
   { 106,15, 14,  0,0x04}, { 107,15, 17,  0,0x04}, { 167,15,  5,  0,0x04}, { 200,21,  6,  0,0x04},
   { 201, 1,  8,  0,0x04}, { 202,11,  9,  0,0x04}, { 205, 6,  7,  0,0x04}, { 206, 7, 10,  0,0x04},
   { 207,20, 13,  0,0x04}, { 223, 9, 12,  0,0x04}, { 231, 9, 11,  0,0x04}, { 311,15, 20,  0,0x04},
   { 348, 2, 15,  0,0x04}, { 349,28, 16,  0,0x04}, { 350, 2, 18,  0,0x04}, { 351,28, 19,  0,0x04}
};
const FieldTrait_Hash_Array 
   QuoteCancel::NoQuoteEntries::_ftha(QuoteCancel::NoQuoteEntries::_traits, NoQuoteEntries::_fieldcnt);
const MsgType QuoteCancel::NoQuoteEntries::_msgtype("NoQuoteEntries");
//-------------------------------------------------------------------------------------------------
const FieldTrait QuoteStatusRequest::_traits[]
{
   {  22,15,  5,  0,0x04}, {  48,15,  4,  0,0x04}, {  54, 7, 21,  0,0x04}, {  55,15,  2,  0,0x05},
   {  65,15,  3,  0,0x04}, { 106,15, 15,  0,0x04}, { 107,15, 18,  0,0x04}, { 117,15,  1,  0,0x04},
   { 167,15,  6,  0,0x04}, { 200,21,  7,  0,0x04}, { 201, 1,  9,  0,0x04}, { 202,11, 10,  0,0x04},
   { 205, 6,  8,  0,0x04}, { 206, 7, 11,  0,0x04}, { 207,20, 14,  0,0x04}, { 223, 9, 13,  0,0x04},
   { 231, 9, 12,  0,0x04}, { 336,15, 22,  0,0x04}, { 348, 2, 16,  0,0x04}, { 349,28, 17,  0,0x04},
   { 350, 2, 19,  0,0x04}, { 351,28, 20,  0,0x04}
};
const FieldTrait_Hash_Array QuoteStatusRequest::_ftha(QuoteStatusRequest::_traits, QuoteStatusRequest::_fieldcnt);
const MsgType QuoteStatusRequest::_msgtype("a");
//-------------------------------------------------------------------------------------------------
const FieldTrait QuoteAcknowledgement::_traits[]
{
   {  58,15,  7,  0,0x04}, { 117,15,  2,  0,0x04}, { 131,15,  1,  0,0x04}, { 296, 1,  8,  0,0x0c},
   { 297, 1,  3,  0,0x05}, { 300, 1,  4,  0,0x04}, { 301, 1,  5,  0,0x04}, { 336,15,  6,  0,0x04}
};
const FieldTrait_Hash_Array QuoteAcknowledgement::_ftha(QuoteAcknowledgement::_traits, QuoteAcknowledgement::_fieldcnt);
const MsgType QuoteAcknowledgement::_msgtype("b");
//-------------------------------------------------------------------------------------------------
const FieldTrait QuoteAcknowledgement::NoQuoteSets::_traits[]
{
   { 295, 1, 22,  0,0x0c}, { 302,15,  1,  0,0x04}, { 304, 1, 21,  0,0x04}, { 305,15,  5,  0,0x04},
   { 306,15, 15,  0,0x04}, { 307,15, 18,  0,0x04}, { 308,20, 14,  0,0x04}, { 309,15,  4,  0,0x04},
   { 310,15,  6,  0,0x04}, { 311,15,  2,  0,0x04}, { 312,15,  3,  0,0x04}, { 313,21,  7,  0,0x04},
   { 314, 6,  8,  0,0x04}, { 315, 1,  9,  0,0x04}, { 316,11, 10,  0,0x04}, { 317, 7, 11,  0,0x04},
   { 362, 2, 16,  0,0x04}, { 363,28, 17,  0,0x04}, { 364, 2, 19,  0,0x04}, { 365,28, 20,  0,0x04},
   { 435, 9, 13,  0,0x04}, { 436, 9, 12,  0,0x04}
};
const FieldTrait_Hash_Array 
   QuoteAcknowledgement::NoQuoteSets::_ftha(QuoteAcknowledgement::NoQuoteSets::_traits, NoQuoteSets::_fieldcnt);
const MsgType QuoteAcknowledgement::NoQuoteSets::_msgtype("NoQuoteSets");
//-------------------------------------------------------------------------------------------------
const FieldTrait QuoteAcknowledgement::NoQuoteSets::NoQuoteEntries::_traits[]
{
   {  22,15,  5,  0,0x04}, {  48,15,  4,  0,0x04}, {  55,15,  2,  0,0x04}, {  65,15,  3,  0,0x04},
   { 106,15, 15,  0,0x04}, { 107,15, 18,  0,0x04}, { 167,15,  6,  0,0x04}, { 200,21,  7,  0,0x04},
   { 201, 1,  9,  0,0x04}, { 202,11, 10,  0,0x04}, { 205, 6,  8,  0,0x04}, { 206, 7, 11,  0,0x04},
   { 207,20, 14,  0,0x04}, { 223, 9, 13,  0,0x04}, { 231, 9, 12,  0,0x04}, { 299,15,  1,  0,0x04},
   { 348, 2, 16,  0,0x04}, { 349,28, 17,  0,0x04}, { 350, 2, 19,  0,0x04}, { 351,28, 20,  0,0x04},
   { 368, 1, 21,  0,0x04}
};
const FieldTrait_Hash_Array 
   QuoteAcknowledgement::NoQuoteSets::NoQuoteEntries::_ftha(QuoteAcknowledgement::NoQuoteSets::NoQuoteEntries::_traits, NoQuoteEntries::_fieldcnt);
const MsgType QuoteAcknowledgement::NoQuoteSets::NoQuoteEntries::_msgtype("NoQuoteEntries");
//-------------------------------------------------------------------------------------------------
const FieldTrait SecurityDefinitionRequest::_traits[]
{
   {  15,19, 22,  0,0x04}, {  22,15,  6,  0,0x04}, {  48,15,  5,  0,0x04}, {  55,15,  3,  0,0x04},
   {  58,15, 23,  0,0x04}, {  65,15,  4,  0,0x04}, { 106,15, 16,  0,0x04}, { 107,15, 19,  0,0x04},
   { 146, 1, 27,  0,0x0c}, { 167,15,  7,  0,0x04}, { 200,21,  8,  0,0x04}, { 201, 1, 10,  0,0x04},
   { 202,11, 11,  0,0x04}, { 205, 6,  9,  0,0x04}, { 206, 7, 12,  0,0x04}, { 207,20, 15,  0,0x04},
   { 223, 9, 14,  0,0x04}, { 231, 9, 13,  0,0x04}, { 320,15,  1,  0,0x05}, { 321, 1,  2,  0,0x05},
   { 336,15, 26,  0,0x04}, { 348, 2, 17,  0,0x04}, { 349,28, 18,  0,0x04}, { 350, 2, 20,  0,0x04},
   { 351,28, 21,  0,0x04}, { 354, 2, 24,  0,0x04}, { 355,28, 25,  0,0x04}
};
const FieldTrait_Hash_Array SecurityDefinitionRequest::_ftha(SecurityDefinitionRequest::_traits, SecurityDefinitionRequest::_fieldcnt);
const MsgType SecurityDefinitionRequest::_msgtype("c");
//-------------------------------------------------------------------------------------------------
const FieldTrait *SecurityDefinitionRequest::NoRelatedSym::_traits(NoRelatedSymV1_traits);
const FieldTrait_Hash_Array& SecurityDefinitionRequest::NoRelatedSym::_ftha(NoRelatedSymV1_ftha);
const MsgType& SecurityDefinitionRequest::NoRelatedSym::_msgtype(NoRelatedSymV1_msgtype);
//-------------------------------------------------------------------------------------------------
const FieldTrait SecurityDefinition::_traits[]
{
   {  15,19, 24,  0,0x04}, {  22,15,  8,  0,0x04}, {  48,15,  7,  0,0x04}, {  55,15,  5,  0,0x04},
   {  58,15, 26,  0,0x04}, {  65,15,  6,  0,0x04}, { 106,15, 18,  0,0x04}, { 107,15, 21,  0,0x04},
   { 146, 1, 29,  0,0x0c}, { 167,15,  9,  0,0x04}, { 200,21, 10,  0,0x04}, { 201, 1, 12,  0,0x04},
   { 202,11, 13,  0,0x04}, { 205, 6, 11,  0,0x04}, { 206, 7, 14,  0,0x04}, { 207,20, 17,  0,0x04},
   { 223, 9, 16,  0,0x04}, { 231, 9, 15,  0,0x04}, { 320,15,  1,  0,0x05}, { 322,15,  2,  0,0x05},
   { 323, 1,  3,  0,0x04}, { 336,15, 25,  0,0x04}, { 348, 2, 19,  0,0x04}, { 349,28, 20,  0,0x04},
   { 350, 2, 22,  0,0x04}, { 351,28, 23,  0,0x04}, { 354, 2, 27,  0,0x04}, { 355,28, 28,  0,0x04},
   { 393, 1,  4,  0,0x05}
};
const FieldTrait_Hash_Array SecurityDefinition::_ftha(SecurityDefinition::_traits, SecurityDefinition::_fieldcnt);
const MsgType SecurityDefinition::_msgtype("d");
//-------------------------------------------------------------------------------------------------
const FieldTrait *SecurityDefinition::NoRelatedSym::_traits(NoRelatedSymV1_traits);
const FieldTrait_Hash_Array& SecurityDefinition::NoRelatedSym::_ftha(NoRelatedSymV1_ftha);
const MsgType& SecurityDefinition::NoRelatedSym::_msgtype(NoRelatedSymV1_msgtype);
//-------------------------------------------------------------------------------------------------
const FieldTrait SecurityStatusRequest::_traits[]
{
   {  15,19, 21,  0,0x04}, {  22,15,  5,  0,0x04}, {  48,15,  4,  0,0x04}, {  55,15,  2,  0,0x05},
   {  65,15,  3,  0,0x04}, { 106,15, 15,  0,0x04}, { 107,15, 18,  0,0x04}, { 167,15,  6,  0,0x04},
   { 200,21,  7,  0,0x04}, { 201, 1,  9,  0,0x04}, { 202,11, 10,  0,0x04}, { 205, 6,  8,  0,0x04},
   { 206, 7, 11,  0,0x04}, { 207,20, 14,  0,0x04}, { 223, 9, 13,  0,0x04}, { 231, 9, 12,  0,0x04},
   { 263, 7, 22,  0,0x05}, { 324,15,  1,  0,0x05}, { 336,15, 23,  0,0x04}, { 348, 2, 16,  0,0x04},
   { 349,28, 17,  0,0x04}, { 350, 2, 19,  0,0x04}, { 351,28, 20,  0,0x04}
};
const FieldTrait_Hash_Array SecurityStatusRequest::_ftha(SecurityStatusRequest::_traits, SecurityStatusRequest::_fieldcnt);
const MsgType SecurityStatusRequest::_msgtype("e");
//-------------------------------------------------------------------------------------------------
const FieldTrait SecurityStatus::_traits[]
{
   {  15,19, 21,  0,0x04}, {  22,15,  5,  0,0x04}, {  31,11, 34,  0,0x04}, {  48,15,  4,  0,0x04},
   {  55,15,  2,  0,0x05}, {  60,22, 35,  0,0x04}, {  65,15,  3,  0,0x04}, { 106,15, 15,  0,0x04},
   { 107,15, 18,  0,0x04}, { 167,15,  6,  0,0x04}, { 200,21,  7,  0,0x04}, { 201, 1,  9,  0,0x04},
   { 202,11, 10,  0,0x04}, { 205, 6,  8,  0,0x04}, { 206, 7, 11,  0,0x04}, { 207,20, 14,  0,0x04},
   { 223, 9, 13,  0,0x04}, { 231, 9, 12,  0,0x04}, { 291, 7, 25,  0,0x04}, { 292, 7, 26,  0,0x04},
   { 324,15,  1,  0,0x04}, { 325, 8, 23,  0,0x04}, { 326, 1, 24,  0,0x04}, { 327, 7, 27,  0,0x04},
   { 328, 8, 28,  0,0x04}, { 329, 8, 29,  0,0x04}, { 330,10, 30,  0,0x04}, { 331,10, 31,  0,0x04},
   { 332,11, 32,  0,0x04}, { 333,11, 33,  0,0x04}, { 334, 1, 36,  0,0x04}, { 336,15, 22,  0,0x04},
   { 348, 2, 16,  0,0x04}, { 349,28, 17,  0,0x04}, { 350, 2, 19,  0,0x04}, { 351,28, 20,  0,0x04}
};
const FieldTrait_Hash_Array SecurityStatus::_ftha(SecurityStatus::_traits, SecurityStatus::_fieldcnt);
const MsgType SecurityStatus::_msgtype("f");
//-------------------------------------------------------------------------------------------------
const FieldTrait TradingSessionStatusRequest::_traits[]
{
   { 263, 7,  5,  0,0x05}, { 335,15,  1,  0,0x05}, { 336,15,  2,  0,0x04}, { 338, 1,  3,  0,0x04},
   { 339, 1,  4,  0,0x04}
};
const FieldTrait_Hash_Array TradingSessionStatusRequest::_ftha(TradingSessionStatusRequest::_traits, TradingSessionStatusRequest::_fieldcnt);
const MsgType TradingSessionStatusRequest::_msgtype("g");
//-------------------------------------------------------------------------------------------------
const FieldTrait TradingSessionStatus::_traits[]
{
   {  58,15, 13,  0,0x04}, { 325, 8,  5,  0,0x04}, { 335,15,  1,  0,0x04}, { 336,15,  2,  0,0x05},
   { 338, 1,  3,  0,0x04}, { 339, 1,  4,  0,0x04}, { 340, 1,  6,  0,0x05}, { 341,22,  7,  0,0x04},
   { 342,22,  8,  0,0x04}, { 343,22,  9,  0,0x04}, { 344,22, 10,  0,0x04}, { 345,22, 11,  0,0x04},
   { 354, 2, 14,  0,0x04}, { 355,28, 15,  0,0x04}, { 387,10, 12,  0,0x04}
};
const FieldTrait_Hash_Array TradingSessionStatus::_ftha(TradingSessionStatus::_traits, TradingSessionStatus::_fieldcnt);
const MsgType TradingSessionStatus::_msgtype("h");
//-------------------------------------------------------------------------------------------------
const FieldTrait header::_traits[]
{
   {   8,15,  1,  0,0x64}, {   9, 1,  2,  0,0x64}, {  34, 1, 10,  0,0x05}, {  35,15,  3,  0,0x44},
   {  43, 8, 19,  0,0x04}, {  49,15,  4,  0,0x05}, {  50,15, 11,  0,0x04}, {  52,22, 21,  0,0x05},
   {  56,15,  5,  0,0x05}, {  57,15, 13,  0,0x04}, {  90, 2,  8,  0,0x04}, {  91,28,  9,  0,0x04},
   {  97, 8, 20,  0,0x04}, { 115,15,  6,  0,0x04}, { 116,15, 15,  0,0x04}, { 122,22, 22,  0,0x04},
   { 128,15,  7,  0,0x04}, { 129,15, 17,  0,0x04}, { 142,15, 12,  0,0x04}, { 143,15, 14,  0,0x04},
   { 144,15, 16,  0,0x04}, { 145,15, 18,  0,0x04}, { 212, 2, 23,  0,0x04}, { 213,28, 24,  0,0x04},
   { 347,15, 25,  0,0x04}, { 369, 1, 26,  0,0x04}, { 370,22, 27,  0,0x04}
};
const FieldTrait_Hash_Array header::_ftha(header::_traits, header::_fieldcnt);
const MsgType header::_msgtype("header");
//-------------------------------------------------------------------------------------------------
const FieldTrait MassQuote::_traits[]
{
   { 117,15,  2,  0,0x05}, { 131,15,  1,  0,0x04}, { 293,10,  4,  0,0x04}, { 294,10,  5,  0,0x04},
   { 296, 1,  6,  0,0x0d}, { 301, 1,  3,  0,0x04}
};
const FieldTrait_Hash_Array MassQuote::_ftha(MassQuote::_traits, MassQuote::_fieldcnt);
const MsgType MassQuote::_msgtype("i");
//-------------------------------------------------------------------------------------------------
const FieldTrait MassQuote::NoQuoteSets::_traits[]
{
   { 295, 1, 23,  0,0x0d}, { 302,15,  1,  0,0x05}, { 304, 1, 22,  0,0x05}, { 305,15,  5,  0,0x04},
   { 306,15, 15,  0,0x04}, { 307,15, 18,  0,0x04}, { 308,20, 14,  0,0x04}, { 309,15,  4,  0,0x04},
   { 310,15,  6,  0,0x04}, { 311,15,  2,  0,0x05}, { 312,15,  3,  0,0x04}, { 313,21,  7,  0,0x04},
   { 314, 6,  8,  0,0x04}, { 315, 1,  9,  0,0x04}, { 316,11, 10,  0,0x04}, { 317, 7, 11,  0,0x04},
   { 362, 2, 16,  0,0x04}, { 363,28, 17,  0,0x04}, { 364, 2, 19,  0,0x04}, { 365,28, 20,  0,0x04},
   { 367,22, 21,  0,0x04}, { 435, 9, 13,  0,0x04}, { 436, 9, 12,  0,0x04}
};
const FieldTrait_Hash_Array 
   MassQuote::NoQuoteSets::_ftha(MassQuote::NoQuoteSets::_traits, NoQuoteSets::_fieldcnt);
const MsgType MassQuote::NoQuoteSets::_msgtype("NoQuoteSets");
//-------------------------------------------------------------------------------------------------
const FieldTrait MassQuote::NoQuoteSets::NoQuoteEntries::_traits[]
{
   {  15,19, 36,  0,0x04}, {  22,15,  5,  0,0x04}, {  40, 7, 33,  0,0x04}, {  48,15,  4,  0,0x04},
   {  55,15,  2,  0,0x04}, {  60,22, 30,  0,0x04}, {  62,22, 25,  0,0x04}, {  64,25, 32,  0,0x04},
   {  65,15,  3,  0,0x04}, { 106,15, 15,  0,0x04}, { 107,15, 18,  0,0x04}, { 132,11, 21,  0,0x04},
   { 133,11, 22,  0,0x04}, { 134,10, 23,  0,0x04}, { 135,10, 24,  0,0x04}, { 167,15,  6,  0,0x04},
   { 188,11, 26,  0,0x04}, { 189,12, 28,  0,0x04}, { 190,11, 27,  0,0x04}, { 191,12, 29,  0,0x04},
   { 192,10, 35,  0,0x04}, { 193,25, 34,  0,0x04}, { 200,21,  7,  0,0x04}, { 201, 1,  9,  0,0x04},
   { 202,11, 10,  0,0x04}, { 205, 6,  8,  0,0x04}, { 206, 7, 11,  0,0x04}, { 207,20, 14,  0,0x04},
   { 223, 9, 13,  0,0x04}, { 231, 9, 12,  0,0x04}, { 299,15,  1,  0,0x05}, { 336,15, 31,  0,0x04},
   { 348, 2, 16,  0,0x04}, { 349,28, 17,  0,0x04}, { 350, 2, 19,  0,0x04}, { 351,28, 20,  0,0x04}
};
const FieldTrait_Hash_Array 
   MassQuote::NoQuoteSets::NoQuoteEntries::_ftha(MassQuote::NoQuoteSets::NoQuoteEntries::_traits, NoQuoteEntries::_fieldcnt);
const MsgType MassQuote::NoQuoteSets::NoQuoteEntries::_msgtype("NoQuoteEntries");
//-------------------------------------------------------------------------------------------------
const FieldTrait BusinessMessageReject::_traits[]
{
   {  45, 1,  1,  0,0x04}, {  58,15,  5,  0,0x04}, { 354, 2,  6,  0,0x04}, { 355,28,  7,  0,0x04},
   { 372,15,  2,  0,0x05}, { 379,15,  3,  0,0x04}, { 380, 1,  4,  0,0x05}
};
const FieldTrait_Hash_Array BusinessMessageReject::_ftha(BusinessMessageReject::_traits, BusinessMessageReject::_fieldcnt);
const MsgType BusinessMessageReject::_msgtype("j");
//-------------------------------------------------------------------------------------------------
const FieldTrait BidRequest::_traits[]
{
   {  15,19,  8,  0,0x04}, {  58,15, 27,  0,0x04}, {  75,25, 23,  0,0x04}, { 121, 8, 21,  0,0x04},
   { 354, 2, 28,  0,0x04}, { 355,28, 29,  0,0x04}, { 374, 7,  3,  0,0x05}, { 390,15,  1,  0,0x04},
   { 391,15,  2,  0,0x05}, { 392,15,  4,  0,0x04}, { 393, 1,  5,  0,0x05}, { 394, 1,  6,  0,0x05},
   { 395, 1,  7,  0,0x04}, { 396,13,  9,  0,0x04}, { 397,13, 10,  0,0x04}, { 398, 1, 11,  0,0x0c},
   { 409, 1, 13,  0,0x04}, { 410, 9, 14,  0,0x04}, { 411, 8, 15,  0,0x04}, { 412,13, 16,  0,0x04},
   { 413, 9, 17,  0,0x04}, { 414, 1, 18,  0,0x04}, { 415, 1, 19,  0,0x04}, { 416, 1, 20,  0,0x04},
   { 417, 1, 22,  0,0x04}, { 418, 7, 24,  0,0x05}, { 419, 7, 25,  0,0x05}, { 420, 1, 12,  0,0x0c},
   { 443,22, 26,  0,0x04}
};
const FieldTrait_Hash_Array BidRequest::_ftha(BidRequest::_traits, BidRequest::_fieldcnt);
const MsgType BidRequest::_msgtype("k");
//-------------------------------------------------------------------------------------------------
const FieldTrait BidRequest::NoBidDescriptors::_traits[]
{
   { 399, 1,  1,  0,0x04}, { 400,15,  2,  0,0x04}, { 401, 1,  3,  0,0x04}, { 402, 9,  6,  0,0x04},
   { 403, 9,  7,  0,0x04}, { 404,13,  4,  0,0x04}, { 405, 9,  8,  0,0x04}, { 406,13,  9,  0,0x04},
   { 407, 9, 10,  0,0x04}, { 408,13, 11,  0,0x04}, { 441, 1,  5,  0,0x04}
};
const FieldTrait_Hash_Array 
   BidRequest::NoBidDescriptors::_ftha(BidRequest::NoBidDescriptors::_traits, NoBidDescriptors::_fieldcnt);
const MsgType BidRequest::NoBidDescriptors::_msgtype("NoBidDescriptors");
//-------------------------------------------------------------------------------------------------
const FieldTrait BidRequest::NoBidComponents::_traits[]
{
   {   1,15,  7,  0,0x04}, {  54, 7,  2,  0,0x04}, {  63, 7,  5,  0,0x04}, {  64,25,  6,  0,0x04},
   {  66,15,  1,  0,0x04}, { 336,15,  3,  0,0x04}, { 430, 1,  4,  0,0x04}
};
const FieldTrait_Hash_Array 
   BidRequest::NoBidComponents::_ftha(BidRequest::NoBidComponents::_traits, NoBidComponents::_fieldcnt);
const MsgType BidRequest::NoBidComponents::_msgtype("NoBidComponents");
//-------------------------------------------------------------------------------------------------
const FieldTrait BidResponse::_traits[]
{
   { 390,15,  1,  0,0x04}, { 391,15,  2,  0,0x04}, { 420, 1,  3,  0,0x0d}
};
const FieldTrait_Hash_Array BidResponse::_ftha(BidResponse::_traits, BidResponse::_fieldcnt);
const MsgType BidResponse::_msgtype("l");
//-------------------------------------------------------------------------------------------------
const FieldTrait BidResponse::NoBidComponents::_traits[]
{
   {  12,13,  1,  0,0x05}, {  13, 7,  2,  0,0x05}, {  44,11,  6,  0,0x04}, {  54, 7,  5,  0,0x04},
   {  58,15, 13,  0,0x04}, {  63, 7, 10,  0,0x04}, {  64,25, 11,  0,0x04}, {  66,15,  3,  0,0x04},
   { 336,15, 12,  0,0x04}, { 354, 2, 14,  0,0x04}, { 355,28, 15,  0,0x04}, { 406,13,  8,  0,0x04},
   { 421,15,  4,  0,0x04}, { 423, 1,  7,  0,0x04}, { 430, 1,  9,  0,0x04}
};
const FieldTrait_Hash_Array 
   BidResponse::NoBidComponents::_ftha(BidResponse::NoBidComponents::_traits, NoBidComponents::_fieldcnt);
const MsgType BidResponse::NoBidComponents::_msgtype("NoBidComponents");
//-------------------------------------------------------------------------------------------------
const FieldTrait ListStrikePrice::_traits[]
{
   {  66,15,  1,  0,0x05}, { 422, 1,  2,  0,0x05}, { 428, 1,  3,  0,0x0d}
};
const FieldTrait_Hash_Array ListStrikePrice::_ftha(ListStrikePrice::_traits, ListStrikePrice::_fieldcnt);
const MsgType ListStrikePrice::_msgtype("m");
//-------------------------------------------------------------------------------------------------
const FieldTrait ListStrikePrice::NoStrikes::_traits[]
{
   {  11,15, 21,  0,0x04}, {  15,19, 24,  0,0x04}, {  22,15,  4,  0,0x04}, {  44,11, 23,  0,0x05},
   {  48,15,  3,  0,0x04}, {  54, 7, 22,  0,0x04}, {  55,15,  1,  0,0x05}, {  58,15, 25,  0,0x04},
   {  65,15,  2,  0,0x04}, { 106,15, 14,  0,0x04}, { 107,15, 17,  0,0x04}, { 140,11, 20,  0,0x04},
   { 167,15,  5,  0,0x04}, { 200,21,  6,  0,0x04}, { 201, 1,  8,  0,0x04}, { 202,11,  9,  0,0x04},
   { 205, 6,  7,  0,0x04}, { 206, 7, 10,  0,0x04}, { 207,20, 13,  0,0x04}, { 223, 9, 12,  0,0x04},
   { 231, 9, 11,  0,0x04}, { 348, 2, 15,  0,0x04}, { 349,28, 16,  0,0x04}, { 350, 2, 18,  0,0x04},
   { 351,28, 19,  0,0x04}, { 354, 2, 26,  0,0x04}, { 355,28, 27,  0,0x04}
};
const FieldTrait_Hash_Array 
   ListStrikePrice::NoStrikes::_ftha(ListStrikePrice::NoStrikes::_traits, NoStrikes::_fieldcnt);
const MsgType ListStrikePrice::NoStrikes::_msgtype("NoStrikes");
//-------------------------------------------------------------------------------------------------
const FieldTrait trailer::_traits[]
{
   {  10,15,  3,  0,0x64}, {  89,28,  2,  0,0x04}, {  93, 2,  1,  0,0x04}
};
const FieldTrait_Hash_Array trailer::_ftha(trailer::_traits, trailer::_fieldcnt);
const MsgType trailer::_msgtype("trailer");

} // namespace CLIENT
} // namespace FIX8
